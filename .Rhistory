5
women
data()
data<-read.csv(file="/Users/piaoruilin/Desktop/DATASCIENCE/COSE102", header=TRUE)
data<-read.csv(file="/Users/piaoruilin/Desktop/DATASCIENCE/COSE102/COSE112_raw data.csv", header=TRUE)
data<-read.csv(file="/Users/piaoruilin/Desktop/COSE112_raw data.csv", header=TRUE)
data
mean(data[,2])
median(data[,3])
sd
sd(data[,3])
stat <- function(x){cat("Statistics","\n","mean = ", mean(x), "\n", "median = ", median(x), "\n", "standard_deviation = ", sd(x), "\n", "variance = ", var(x), "\n", "maximum = ", max(x), "\n", "minimum = ", min(x), "\n", "sum = ", sum(x), "\n")}
stat(data[,2])
data("AirPassengers")
data("AirPassengers")
data("")
data()
P083.fit2 = lm(F~P2,data=P083)
P083 = data.frame(F=c(78,75,85,94,86,90,86,68,55,69,91,75,81,91,80,94,94,97,79,84,65,83),
P1=c(73,74,82,90,87,90,83,72,68,69,91,79,89,93,87,91,86,91,81,80,70,79),
P2=c(12,76,79,96,90,92,95,69,67,70,89,75,84,97,77,96,94,92,82,83,66,81))
text(re,po,labels=rownames(P128),pos=4,col="red",cex=1,font=1)
View(P083)
View(P083)
Fitted = as.vector(fitted(P128.fit))
Fitted = as.vector(fitted(P128.fitted))
plot(re,po,pch=19,cex=1)
text(re, po, labels=rownames(P128),pos=4,col="red",cex=1,font=1)
text(re, po, labels=rownames(P128),pos=4,col="red",cex=1,font=1)
text(re, po, labels=rownames(P128), pos=4, col="red", cex=1, font=1)
plot(1:10, pch=25, cex=2)
plot(obs.num,H,pch=19,cex=1)
# Prob 3.3
P083.fit1 = lm(F~P1,data=P083)
summary(P083.fit1)
P083.fit2 = lm(F~P2,data=P083)
summary(P083.fit2)
P083.fit3 = lm(F~P1+P2,data=P083)
summary(P083.fit3)
# Prob 3.15
P088.fit = lm(Sales ~ Age+HS+Income+Black+Female+Price,data=P088)
P128.cor = cor(P128[c("Y","X1","X2","X3","X4","X5","X6")])
P083.fit1 = lm(F~P1,data=P083)
summary(P083.fit1)
P083.fit2 = lm(F~P2,data=P083)
summary(P083.fit2)
P083.fit3 = lm(F~P1+P2,data=P083)
summary(P083.fit3)
P083.fit1 = lm(F~P1,data=P083)summary(P083.fit1)
P083.fit1 = lm(F~P1,data=P083)
summary(P083.fit1)
P083.fit1 = lm(F~P1, data=P083)
summary(P083.fit1)
P083.fit1 = lm(F~P1, data=P083)
summary(P083.fit1)
load("/Users/piaoruilin/Desktop/DATASCIENCE/STAT342/RABE5.RData")
plot(Y~X,data=P029a,type="p",pch=20,col="blue",cex=2)
scatterplot(Y~X,data=P029a,pch=1,cex=2)
car::scatterplot(Y~X,data=P029a,pch=1,cex=2)
cor(P029a[c("Y","X")],method=c("pearson"))
cor(P029a[c("Y","X")],method=c("pearson"))
par(mfrow=c(2,2))
plot(Y1~X1,data=P029b,type="p",pch=20,col="blue",cex=2,xlim=c(0,20),ylim=c(0,14))
abline(lm(Y1~X1,data=P029b),lwd=2,col="red")
plot(Y2~X2,data=P029b,type="p",pch=20,col="blue",cex=2,xlim=c(0,20),ylim=c(0,14))
abline(lm(Y2~X2,data=P029b),lwd=2,col="red")
plot(Y3~X3,data=P029b,type="p",pch=20,col="blue",cex=2,xlim=c(0,20),ylim=c(0,14))
abline(lm(Y3~X3,data=P029b),lwd=2,col="red")
plot(Y4~X4,data=P029b,type="p",pch=20,col="blue",cex=2,xlim=c(0,20),ylim=c(0,14))
abline(lm(Y4~X4,data=P029b),lwd=2,col="red")
plot(Y~X,data=P029a,type="p",pch=20,col="blue",cex=2)
car::scatterplot(Y~X,data=P029a,pch=1,cex=2)
cor(P029a[c("Y","X")],method=c("pearson"))
par(mfrow=c(1,1))
plot(Minutes~Units,data=P031,type="p",pch=20,col="blue",cex=2)
abline(lm(Minutes~Units,data=P031),lwd=2,col="red")
cor(P031[c("Minutes","Units")],method=c("pearson"))
cor.test(~Minutes+Units,data=P031,method=c("pearson"))
scatterplot(Minutes~Units,data=P031,cex=3,lwd=2)
car::scatterplot(Minutes~Units,data=P031,cex=3,lwd=2)
P031.fit = lm(Minutes~Units,data=P031)
summary(P031.fit)
summary(P031.fit)
coef(summary(P031.fit))
tstat = (coef(summary(P031.fit))[2,1]-12)/coef(summary(P031.fit))[2,2]
tstat
df = P031.fit$df.residual
df
qt(0.025,df,lower.tail=FALSE)
2*pt(tstat,df,lower.tail=FALSE)
cor.test(~Minutes+Units,data=P031,method=c("pearson"))
P031.pred = predict(P031.fit,interval='prediction',level=0.95)
P031.pred = data.frame(P031,P031.pred)
P031.pred
P031.conf = predict(P031.fit,interval='confidence',level=0.95)
P031.conf = data.frame(P031,P031.conf)
P031.conf
plot(fit~Minutes,data=P031.pred,type="p",pch=20,col="blue",cex=2)
abline(lm(fit~Minutes,data=P031.pred),lwd=2,col="red")
cor(P031.pred[c("Minutes","fit")],method=c("pearson"))
P031.aov = aov(Minutes~Units,data=P031)
summary(P031.aov)
P083.fit1 = lm(F~P1,data=P083)
summary(P083.fit1)
P083.fit2 = lm(F~P2,data=P083)
summary(P083.fit2)
P083.fit3 = lm(F~P1+P2,data=P083)
summary(P083.fit3)
P088.fit = lm(Sales ~ Age+HS+Income+Black+Female+Price,data=P088)
summary(P088.fit)
rm.fit.b = lm(Sales ~ Age+Income+Black+Price,data=P088)
summary(rm.fit.b)
anova(rm.fit.b,P088.fit)
confint(P088.fit,level=0.95)
rm.fit.d = lm(Sales ~ Age+HS+Black+Female+Price,data=P088)
summary(rm.fit.d)
rm.fit.e = lm(Sales ~ Age+Income+Price,data=P088)
summary(rm.fit.e)
rm.fit.f = lm(Sales ~ Income,data=P088)
summary(rm.fit.f)
pairs(P088)
P088.cor = cor(P088[c("Age","HS","Income","Black","Female","Price","Sales" )])
corrplot(P088.cor,method="number",diag=TRUE,type="full")
car::corrplot(P088.cor,method="number",diag=TRUE,type="full")
> corrplot(P088.cor,method="number",diag=TRUE,type="full")
corrplot(cor(P088),method="number",diag=TRUE,type="full")
pairs(P088)
P088.cor = cor(P088[c("Age","HS","Income","Black","Female","Price","Sales" )])
corrplot(P088.cor,method="number",diag=TRUE,type="full")
e = as.vector(residuals(P083.fit1))
d = e/sqrt(516.34)
p = as.vector(hatvalues(P083.fit1))
po = p/(1-p);
re = ((p+1)/(1-p))*(d**2/(1-d**2));
plot(re,po,pch=19,cex=1, main="Model 1(P1)")
text(re,po,labels=rownames(P083),pos=4,col="red",cex=1,font=1)
e = as.vector(residuals(P083.fit2))
d = e/sqrt(365.46)
p = as.vector(hatvalues(P083.fit2))
po = p/(1-p);
re = ((p+1)/(1-p))*(d**2/(1-d**2));
plot(re,po,pch=19,cex=1, main="Model 2(P2)")
text(re,po,labels=rownames(P083),pos=4,col="red",cex=1,font=1)
e = as.vector(residuals(P083.fit3))
d = e/sqrt(296.83)
p = as.vector(hatvalues(P083.fit3))
po = p/(1-p);
re = ((p+1)/(1-p))*(d**2/(1-d**2));
plot(re,po,pch=19,cex=1, main="Model 1(P1 & P2)")
text(re,po,labels=rownames(P083),pos=4,col="red",cex=1,font=1)
P083.a = P083[which((rownames(P083) != "15") &(rownames(P083) != "7") & (rownames(P083) != "9")),]
P083.fit.a = lm(F~P1+P2,data=P083.a)
summary(P083.fit.a)
plot(re,po,pch=19,cex=1, main="Model 1(P1)")
text(re,po,labels=rownames(P083),pos=4,col="red",cex=1,font=1)
plot(re,po,pch=19,cex=1, main="Model 2(P2)")
text(re,po,labels=rownames(P083),pos=4,col="red",cex=1,font=1)
par(mfrow=c(1,1))
P128.cor = cor(P128[c("Y","X1","X2","X3","X4","X5","X6")])
corrplot(P128.cor,method="number",diag=TRUE,type="full")
install.packages('corrplot')
par(mfrow=c(1,1))
P128.cor = cor(P128[c("Y","X1","X2","X3","X4","X5","X6")])
corrplot(P128.cor,method="number",diag=TRUE,type="full")
devtools::install_github('taiyun/corrplot', build_vignettes = TRUE)
citation('corrplot')
install.packages("corrplot")
par(mfrow=c(1,1))
P128.cor = cor(P128[c("Y","X1","X2","X3","X4","X5","X6")])
corrplot(P128.cor,method="number",diag=TRUE,type="full")
P128.pred = data.frame(P128,Fitted,Residual,Rstandard,Rstudent)
Fitted = as.vector(fitted(P128.fit))
P128.fit = lm(Y~X1+X2+X3+X4+X5+X6,data=P128)
summary(P128.fit)
Fitted = as.vector(fitted(P128.fit))
Residual = as.vector(residuals(P128.fit))
Rstandard = as.vector(rstandard(P128.fit))
Rstudent = as.vector(rstudent(P128.fit))
P128.pred = data.frame(P128,Fitted,Residual,Rstandard,Rstudent)
P128.pred
par(mfrow=c(2,3))
plot(P128.fit,which=1,col=c("blue"))
plot(P128.fit,which=2,col=c("red"))
plot(P128.fit,which=3,col=c("blue"))
plot(P128.fit,which=4,col=c("blue"))
plot(P128.fit,which=5,col=c("blue"))
plot(P128.fit,which=6,col=c("blue"))
influence.measures(P128.fit)
plot(obs.num,Residual,pch=19,cex=1)
plot(P158.fit,which=1,col=c("blue"))
P158
plot(P158,which=1,col=c("blue"))
plot(P158)
plot(P159)
model <- lm(P159)
summary(model)
f_statistic <- summary(model)$fstatistic[1]
p_value <- summary(model)$fstatistic[2]
f_statistic
p_value
p_value <- summary(model)$fstatistic[2]
p_value
f_statistic
summary(model)
p_value
t_value
coef_index <- 2 # index of the coefficient you want to test (e.g., 2 for the second independent variable)
t_value <- summary(model)$coefficients[coef_index, "t value"]
t_value
coef_index <- 2
t_value <- summary(model)$coefficients[coef_index, "t value"]
p_value <- summary(model)$coefficients[coef_index, "Pr(>|t|)"]
p_value
plot(P159)
model <- lm(P159)
summary(model)
full_model <- lm(Age ~ Height + Weight, data = P159)
#reduced model
reduced_model <- lm(Age ~ 1, data = P159)
# Perform the F-test
f_test <- anova(reduced_model, full_model)
f_test
full_model <- lm(Age ~ Height + Weight, data = P159)
reduced_model <- lm(Age ~ 1, data = P159)
f_test <- anova(reduced_model, full_model)
f_test
summary(full_model)
View(P155a)
plot(P155a)
model <- lm(Y ~ Horsepower, data = P155b)
residuals <- residuals(model)
var_Y <- var(residuals + fitted(model))
var_Y
r_squared <- summary_model$r.squared
summary_model <- summary(model)
r_squared <- summary_model$r.squared
r_squared
confidence_intervals <- confint(model)
confidence_intervals
confidence_intervals <- confint(model)
confidence_intervals
model <- lm(Y ~ Gender, data = P155a)
confidence_intervals <- confint(model)
confidence_intervals
confidence_intervals_specific <- confint(model, level = 0.95)
confidence_intervals_specific
confidence_intervals <- confint(model, level = 0.95)
confidence_intervals
model1 <- lm(V ~ I+D+W+G. I+P+N, data=P160)
model1 <- lm(V ~ I+D+W+G, I+P+N, data=P160)
coef(model1)
model1 <- lm(V ~ I+D+W+G+P+N, data=P160)
coef(model1)
summary(model1)
model2 <- lm(V ~ D+W+G+P+N, data=P160)
summary(model2)
model1 <- lm(V ~ I+D+W+G*I+P+N, data=P160)
coef(model1)
summary(model1)
fullmodel <- lm(V ~ ., data=P160[-1])
summary(fullmodel)
model2 <- lm(R~P, data=P187)
summary(model2)
rstandard()
rstandard(model2)
plot(P187$P, standardized_residual,xlab="P",ylab="Standardizes Residual",main="graph")
stanres <- rstandard(model2)
plot(P187$P, stanres,xlab="P",ylab="Standardizes Residual",main="graph")
model3 <- lm(Price~t, data=P190)
model3 <- lm(Price~Year, data=P190)
summary(model3)
t <- (1,2,3,4,5,6,7,8,9,10,11)
model3 <- lm(Year~Price, data=P190)
summary(model3)
t <- c(1,2,3,4,5,6,7,8,9,10,11)
model3 <- lm(Price~t, data=P190)
summary(model3)
ggplot(P190, aes(x=t, y=Price)) + geom_point() + labs(x="t", y="price", title="Price vs t"))
ggplot(P190, aes(x=t, y=Price)) + geom_point() + labs(x="t", y="price", title="Price vs t")
corrplot(P190, aes(x=t, y=Price)) + geom_point() + labs(x="t", y="price", title="Price vs t")
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(P190, aes(x=t, y=Price)) + geom_point() + labs(x="t", y="price", title="Price vs t")
summary(OLS_model)
OLS_model <- lm(Y~X1+X2+X3, data = P198)
summary(OLS_model)
pii <- round(as.vector(lm.influence(OLS_model)$hat),4)
pii
std_res <- rstandard(OLS_model)
std_res
p=3
mse <- anova(OLS_model)[4,3]
mse
residuals <- OLS_model$residuals
ri <- residuals/sqrt(mse*(1-pii))
potential <- pii/(1-pii)
cook <- ri^2*potential/(p+1)
cook
cook <- cooks.distance(OLS_model)
cook
ls.diag(OLS_model)
std.dev
plot(ls.diag)
plot(pii)
plot(std_res)
plot(cook)
P198.B = P198[which(row.names(P198)!=49),]
P198.B.fit = lm(Y~X1+X2+X3,data=P198.B)
summary(P198.B.fit)
Fitted = fitted(P198.B.fit)
Rstandard = as.vector(rstandard(P198.B.fit))
plot(Fitted,Rstandard,pch=19,cex=1)
plot(P198.B$Region,Rstandard,pch=19,cex=1)
OLS_indicator <- lm(Y ~ X1+X2+X3+IV1+IV2+IV4, data = P198)
OLS_indicator <- lm(Y ~ X1+X2+X3, data = P198)
summary(OLS_indicator)
residual <- OLS_indicator$residuals
residual
data$D1 <- ifelse(data$Region == 1, 1, 0)
P198$D1 <- ifelse(P198$Region == 1, 1, 0)
P198$D2 <- ifelse(P198$Region == 2, 1, 0)
P198$D3 <- ifelse(P198$Region == 3, 1, 0)
fit <- lm(Y ~ X1+X2+X3+D1+D2+D3, data = P198)
summary(fit)
reduced_fit <- lm(Y ~ X1 + X2 + X3, data = P198)
anova(reduced_fit, fit)
# Check the p-value
p_value <- anova_result[["Pr(>F)"]][2]
# Create indicator variables for the regions
data$D1 <- ifelse(data$Region == 1, 1, 0)
anova_result <- anova(reduced_fit, fit)
print(anova_result)
# Check the p-value
p_value <- anova_result[["Pr(>F)"]][2]
# Conclusion
if (p_value < 0.05) {
cat("The p-value is", p_value, ". We reject the null hypothesis and conclude that there are significant differences in the regression models for the four regions.\n")
} else {
cat("The p-value is", p_value, ". We do not reject the null hypothesis and conclude that there are no significant differences in the regression models for the four regions.\n")
}
anova_result <- anova(reduced_fit, fit)
print(anova_result)
library(lmtest)
data <- P229.frame(Day = Days, DJIA = DJIA)
library(lmtest)
data <- data.frame(Day = Days, DJIA = DJIA)
model <- lm(DJIA ~ Day, data = P229)
P229
P229 <- P229.frame(Date = Days, DJIA = DJIA)
P229 <- data.frame(Date = Days, DJIA = DJIA)
P229 <- data.frame(Date = Date, DJIA = DJIA)
modelDJIA <- lm(DJIA~Day, data=P229)
modelDJIA <- lm(DJIA~Date, data=P229)
summary(modelDJIA)
plot(pii, main = "Leverage Values", ylab = "Leverage", xlab = "Index")
abline(h = 2 * mean(pii), col = "red", lty = 2)
#identify
high_lev <- which(pii > 2 * mean(pii))
inf_cooks <- which(cook > 4 / length(cook))
infdfits <- which(abs(dfits) > 2 * sqrt(mean(pii)))
dfits <- dffits(OLS_model)
cat("High-leverage points:", high_lev, "\n")
cat("Influential points (Cook's distance):", inf_cooks, "\n")
cat("Influential points (DFITS):", inf_dfits, "\n")
high_lev <- which(pii > 2 * mean(pii))
inf_cooks <- which(cook > 4 / length(cook))
inf_dfits <- which(abs(dfits) > 2 * sqrt(mean(pii)))
# Print high-leverage and influential points
cat("High-leverage points:", high_lev, "\n")
cat("Influential points (Cook's distance):", inf_cooks, "\n")
cat("Influential points (DFITS):", inf_dfits, "\n")
high_lev <- which(pii > 2 * mean(pii))
inf_cooks <- which(cook > 4 / length(cook))
inf_dfits <- which(abs(dfits) > 2 * sqrt(mean(pii)))
alaska_index <- which(P198$State == "AK")
utah_index <- which(P198$State == "UT")
cat("High-leverage points:", high_lev, "\n")
cat("Influential points (Cook's distance):", inf_cooks, "\n")
cat("Influential points (DFITS):", inf_dfits, "\n")
cat("Alaska leverage value:", pii[alaska_index], "\n")
cat("Utah leverage value:", pii[utah_index], "\n")
cat("Alaska Cook's distance:", cook[alaska_index], "\n")
cat("Utah Cook's distance:", cook[utah_index], "\n")
cat("Alaska DFITS:", dfits[alaska_index], "\n")
cat("Utah DFITS:", dfits[utah_index], "\n")
View(P198)
alaska_index <- which(P198$x == "AK")
utah_index <- which(P198$x == "UT")
cat("Alaska leverage value:", pii[alaska_index], "\n")
cat("Utah leverage value:", pii[utah_index], "\n")
cat("Alaska Cook's distance:", cook[alaska_index], "\n")
cat("Utah Cook's distance:", cook[utah_index], "\n")
cat("Alaska DFITS:", dfits[alaska_index], "\n")
cat("Utah DFITS:", dfits[utah_index], "\n")
plot(dfits, main = "DFITS", ylab = "DFITS", xlab = "Index")
high_lev <- which(pii > 2 * mean(pii))
inf_cooks <- which(cook > 4 / length(cook))
inf_dfits <- which(abs(dfits) > 2 * sqrt(mean(pii)))
cat("High-leverage points:", high_lev, "\n")
cat("Influential points (Cook's distance):", inf_cooks, "\n")
cat("Influential points (DFITS):", inf_dfits, "\n")
modelDJIA <- lm(Date~DIJA, data=P229)
modelDJIA <- lm(Date~DJIA, data=P229)
summary(modelDJIA)
View(P229)
P229$Date <- as.Date(P229$Date, format = "%Y-%m-%d")
origin_date <- min(P229$Date)
P229$Days <- as.numeric(difftime(P229$Date, origin_date, units = "days"))
head(P229)
P229$Days <- NULL
P229$Date <- as.character(P229$Date)
P229$Date <- as.numeric(P229$Date)
P229$Date <- as.Date(P229$Date)
View(P229)
View(P229)
View(P229)
read.table
View(P290)
data <- data.frame(
Day = 1:261,
DJIA = c(5117.12, 5177.45, 5194.07, 5173.84, 5181.43, 5197.68, 5130.13, 5032.94, 5065.10, 5061.12, 5043.78, 5088.22, 5066.90, 5124.35, 5184.68, 5219.36, 5192.27, 5242.84, 5216.83, 5271.75, 5304.98, 5381.21, 5395.30, 5405.06, 5373.99, 5407.59, 5459.61, 5492.12, 5539.45, 5541.62, 5600.15, 5601.23, 5579.55, 5551.37, 5503.32, 5503.32, 5458.53, 5515.97, 5608.46, 5630.49, 5565.10, 5549.21, 5506.21, 5485.62, 5536.56, 5600.15, 5642.42, 5629.77, 5641.69, 5470.45, 5581.00, 5583.89, 5568.72, 5586.06, 5584.97, 5683.60, 5669.51, 5655.42, 5626.88, 5636.64, 5643.86, 5670.60, 5626.88, 5630.85, 5587.14, 5637.72, 5671.68, 5689.74, 5682.88, 5682.88, 5594.37, 5560.41, 5485.98, 5487.07, 5532.59, 5592.92, 5620.02, 5549.93, 5551.74, 5535.48, 5564.74, 5588.59, 5553.90, 5566.91, 5567.99, 5573.41, 5569.08, 5575.22, 5498.27, 5478.03, 5464.31, 5420.95, 5474.06, 5475.14, 5518.14, 5582.60, 5624.71, 5625.44, 5635.05, 5687.50, 5748.82, 5736.26, 5778.00, 5762.12, 5762.86, 5762.86, 5709.67, 5673.83, 5693.41, 5643.18, 5624.71, 5665.71, 5697.48, 5667.19, 5697.11, 5687.87, 5668.66, 5668.29, 5657.95, 5649.45, 5652.78, 5628.03, 5648.35, 5659.43, 5705.23, 5717.79, 5719.27, 5682.70, 5677.53, 5654.63, 5729.98, 5720.38, 5703.02, 5703.02, 5588.14, 5550.83, 5581.86, 5603.65, 5520.50, 5510.56, 5349.51, 5358.76, 5376.88, 5464.18, 5426.82, 5390.94, 5346.55, 5354.69, 5422.01, 5473.06, 5434.59, 5481.93, 5528.91, 5594.75, 5679.83, 5674.28, 5696.11, 5718.67, 5713.49, 5681.31, 5704.98, 5647.28, 5666.88, 5665.78, 5689.45, 5699.44, 5721.26, 5689.82, 5733.47, 5722.74, 5693.89, 5711.27, 5712.38, 5647.65, 5616.21, 5616.21, 5648.39, 5656.90, 5606.96, 5659.86, 5733.84, 5727.18, 5754.92, 5771.94, 5838.52, 5889.20, 5888.83, 5877.36, 5867.74, 5888.46, 5894.74, 5874.03, 5877.36, 5868.85, 5872.92, 5882.17, 5904.90, 5933.97, 5932.85, 5992.86, 5979.81, 5966.77, 5930.62, 5921.67, 5969.38, 6010.00, 6004.78, 6020.81, 6059.20, 6094.23, 6090.87, 6061.80, 6036.46, 5992.48, 6007.02, 5972.73, 6007.02, 5993.23, 6029.38, 6021.93, 6041.68, 6081.18, 6206.04, 6219.82, 6255.60, 6266.04, 6274.24, 6313.00, 6348.03, 6346.91, 6397.60, 6430.02, 6418.47, 6471.76, 6547.79, 6528.41, 6499.34, 6499.34, 6521.70, 6521.70, 6442.69, 6422.94, 6437.10, 6381.94, 6463.94, 6473.25, 6402.52, 6303.71, 6304.87, 6268.35, 6308.33, 6346.77, 6473.64, 6484.40, 6489.02, 6522.85, 6522.85, 6546.68, 6560.91, 6549.37, 6448.27)
)
model <- lm(DJIA ~ Day, data = data)
summary(model)
head(P229)
par(mfrow = c(2, 2))
plot(model)
plot(model)
par(mar = c(1,1,1,1))
plot(model)
hist(residuals(model), main = "Histogram of Residuals", xlab = "Residuals")
qqnorm(residuals(model))
qqline(residuals(model), col = "red")
plot(data$Day, residuals(model), type = "o", main = "Residuals Over Time", xlab = "Day", ylab = "Residuals")
dw_test <- dwtest(model)
library(lmtest)
library(zoo)
library("zoo")
library(lmtest)
dw_test <- dwtest(model)
print(dw_test)
if (dw_test$p.value < 0.05) {
cat("The p-value is", dw_test$p.value, ". There is significant evidence of autocorrelation in the residuals.\n")
} else {
cat("The p-value is", dw_test$p.value, ". There is no significant evidence of autocorrelation in the residuals.\n")
}
par(mar = c(1,1,1,1))
plot(model)
model <- lm(DJIA ~ Day, data = data)
summary(model)
par(mar = c(1,1,1,1))
plot(model)
###############
## Chapter 7 ##
###############
#############################################
## Example: Happiness and Belief in Heaven ##
#############################################
HappyHeaven <- read.table("http://www.stat.ufl.edu/~aa/cat/data/HappyHeaven.dat",
header=TRUE)
fit.JI <- glm(count ~ A*C + M, family = poisson, data = Drugs)
Drugs <- read.table("http://www.stat.ufl.edu/~aa/cat/data/Substance.dat", header=TRUE)
Drugs
A <- Drugs$alcohol
C <- Drugs$cigarettes
M <- Drugs$marijuana
fit.MI <- glm(count ~ A + C + M, family = poisson, data = Drugs)
summary(fit.MI)
plot(Drugs)
Injury
Injury <- read.table("http://www.stat.ufl.edu/~aa/cat/data/Injury_binom.dat",
header = T)
G <- Injury$gender
L <- Injury$location
S <- Injury$seatbelt
fit2 <- glm(yes/(no+yes) ~ G + L + S, family = binomial, weights = no+yes,
data = Injury)
summary(fit2)
pR/pI <- exp(-2.3 + 0.5 * x)
exp(-2.3 + 0.5 * x)
exp(-2.3 + 0.5*6.5)
alligators <- read.table("Alligators2.dat", header = TRUE)
alligators <- read.table("Alligators2.dat", header = TRUE)
setwd("~/Desktop/DATASCIENCE/STAT343")
alligators <- read.table("Alligators2.dat", header = TRUE)
model <- multinom(y1 ~ y5 + lake, data = Alligators2)
library(nnet)
library(dplyr)
library(nnet)
model <- multinom(y1 ~ y5 + lake, data = Alligators2)
Gators <- read.table("http://www.stat.ufl.edu/~aa/cat/data/Alligators.dat",
header = TRUE)
head(Gators, 5)
library(VGAM) # package for multivariate GLMs, such as multinomial models
